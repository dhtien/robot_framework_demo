<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 4.0.3 (Python 3.9.1 on darwin)" generated="20210715 15:04:44.576" rpa="false" schemaversion="2">
<suite id="s1" name="DemoTestCase" source="/Users/vubao/PycharmProjects/demo-project/TestCase/DemoTestCase.robot">
<kw name="Create Session" library="RequestsLibrary" type="SETUP">
<arg>jsonplaceholder</arg>
<arg>https://jsonplaceholder.typicode.com</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210715 15:04:44.663" level="INFO">Creating Session using : alias=jsonplaceholder, url=https://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20210715 15:04:44.663" endtime="20210715 15:04:44.663"/>
</kw>
<test id="s1-t1" name="TC_DEMO_1">
<kw name="Get On Session" library="RequestsLibrary">
<var>${resp_json}</var>
<arg>jsonplaceholder</arg>
<arg>/users</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20210715 15:04:44.851" level="INFO">GET Request : url=https://jsonplaceholder.typicode.com/users 
 path_url=/users 
 headers={'User-Agent': 'python-requests/2.26.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210715 15:04:44.851" level="INFO">GET Response : url=https://jsonplaceholder.typicode.com/users 
 status=200, reason=OK 
 headers={'Date': 'Thu, 15 Jul 2021 08:04:44 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '997', 'X-Ratelimit-Reset': '1624305286', 'Vary': 'Origin, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'max-age=43200', 'Pragma': 'no-cache', 'Expires': '-1', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"160d-1eMSsxeJRfnVLRBmYJSbCiJZ1qQ"', 'Content-Encoding': 'gzip', 'Via': '1.1 vegur', 'CF-Cache-Status': 'HIT', 'Age': '25466', 'Expect-CT': 'max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=thtENfwyF1wpcaVigDmiHJPSadGSGtII%2FPwJFVviOTT2%2FgCZgfZmnkZMqzou9co7i%2F6SWaF3g72NzIZvgMT3qo8oOc6jFiGCUWKekSmnLsu7WeqBliMzv5B%2BOZSI18wZkeVfmxNbqaPt%2FDoxCP%2BV"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '66f17b54bf675614-SIN', 'alt-svc': 'h3-27=":443"; ma=86400, h3-28=":443"; ma=86400, h3-29=":443"; ma=86400, h3=":443"; ma=86400'} 
 body=[
  {
    "id": 1,
    "name": "Leanne Graham",
    "username": "Bret",
    "email": "Sincere@april.biz",
    "address": {
      "street": "Kulas Light",
      "suite": "Apt. 556",
      "city": "Gwenborough",
      "zipcode": "92998-3874",
      "geo": {
        "lat": "-37.3159",
        "lng": "81.1496"
      }
    },
    "phone": "1-770-736-8031 x56442",
    "website": "hildegard.org",
    "company": {
      "name": "Romaguera-Crona",
      "catchPhrase": "Multi-layered client-server neural-net",
      "bs": "harness real-time e-markets"
    }
  },
  {
    "id": 2,
    "name": "Ervin Howell",
    "username": "Antonette",
    "email": "Shanna@melissa.tv",
    "address": {
      "street": "Victor Plains",
      "suite": "Suite 879",
      "city": "Wisokyburgh",
      "zipcode": "90566-7771",
      "geo": {
        "lat": "-43.9509",
        "lng": "-34.4618"
      }
    },
    "phone": "010-692-6593 x09125",
    "website": "anastasia.net",
    "company": {
      "name": "Deckow-Crist",
      "catchPhrase": "Proactive didactic contingency",
      "bs": "synergize scalable supply-chains"
    }
  },
  {
    "id": 3,
    "name": "Clementine Bauch",
    "username": "Samantha",
    "email": "Nathan@yesenia.net",
    "address": {
      "street": "Douglas Extension",
      "suite": "Suite 847",
      "city": "McKenziehaven",
      "zipcode": "59590-4157",
      "geo": {
        "lat": "-68.6102",
        "lng": "-47.0653"
      }
    },
    "phone": "1-463-123-4447",
    "website": "ramiro.info",
    "company": {
      "name": "Romaguera-Jacobson",
      "catchPhrase": "Face to face bifurcated interface",
      "bs": "e-enable strategic applications"
    }
  },
  {
    "id": 4,
    "name": "Patricia Lebsack",
    "username": "Karianne",
    "email": "Julianne.OConner@kory.org",
    "address": {
      "street": "Hoeger Mall",
      "suite": "Apt. 692",
      "city": "South Elvis",
      "zipcode": "53919-4257",
      "geo": {
        "lat": "29.4572",
        "lng": "-164.2990"
      }
    },
    "phone": "493-170-9623 x156",
    "website": "kale.biz",
    "company": {
      "name": "Robel-Corkery",
      "catchPhrase": "Multi-tiered zero tolerance productivity",
      "bs": "transition cutting-edge web services"
    }
  },
  {
    "id": 5,
    "name": "Chelsey Dietrich",
    "username": "Kamren",
    "email": "Lucio_Hettinger@annie.ca",
    "address": {
      "street": "Skiles Walks",
      "suite": "Suite 351",
      "city": "Roscoeview",
      "zipcode": "33263",
      "geo": {
        "lat": "-31.8129",
        "lng": "62.5342"
      }
    },
    "phone": "(254)954-1289",
    "website": "demarco.info",
    "company": {
      "name": "Keebler LLC",
      "catchPhrase": "User-centric fault-tolerant solution",
      "bs": "revolutionize end-to-end systems"
    }
  },
  {
    "id": 6,
    "name": "Mrs. Dennis Schulist",
    "username": "Leopoldo_Corkery",
    "email": "Karley_Dach@jasper.info",
    "address": {
      "street": "Norberto Crossing",
      "suite": "Apt. 950",
      "city": "South Christy",
      "zipcode": "23505-1337",
      "geo": {
        "lat": "-71.4197",
        "lng": "71.7478"
      }
    },
    "phone": "1-477-935-8478 x6430",
    "website": "ola.org",
    "company": {
      "name": "Considine-Lockman",
      "catchPhrase": "Synchronised bottom-line interface",
      "bs": "e-enable innovative applications"
    }
  },
  {
    "id": 7,
    "name": "Kurtis Weissnat",
    "username": "Elwyn.Skiles",
    "email": "Telly.Hoeger@billy.biz",
    "address": {
      "street": "Rex Trail",
      "suite": "Suite 280",
      "city": "Howemouth",
      "zipcode": "58804-1099",
      "geo": {
        "lat": "24.8918",
        "lng": "21.8984"
      }
    },
    "phone": "210.067.6132",
    "website": "elvis.io",
    "company": {
      "name": "Johns Group",
      "catchPhrase": "Configurable multimedia task-force",
      "bs": "generate enterprise e-tailers"
    }
  },
  {
    "id": 8,
    "name": "Nicholas Runolfsdottir V",
    "username": "Maxime_Nienow",
    "email": "Sherwood@rosamond.me",
    "address": {
      "street": "Ellsworth Summit",
      "suite": "Suite 729",
      "city": "Aliyaview",
      "zipcode": "45169",
      "geo": {
        "lat": "-14.3990",
        "lng": "-120.7677"
      }
    },
    "phone": "586.493.6943 x140",
    "website": "jacynthe.com",
    "company": {
      "name": "Abernathy Group",
      "catchPhrase": "Implemented secondary concept",
      "bs": "e-enable extensible e-tailers"
    }
  },
  {
    "id": 9,
    "name": "Glenna Reichert",
    "username": "Delphine",
    "email": "Chaim_McDermott@dana.io",
    "address": {
      "street": "Dayna Park",
      "suite": "Suite 449",
      "city": "Bartholomebury",
      "zipcode": "76495-3109",
      "geo": {
        "lat": "24.6463",
        "lng": "-168.8889"
      }
    },
    "phone": "(775)976-6794 x41206",
    "website": "conrad.com",
    "company": {
      "name": "Yost and Sons",
      "catchPhrase": "Switchable contextually-based project",
      "bs": "aggregate real-time technologies"
    }
  },
  {
    "id": 10,
    "name": "Clementina DuBuque",
    "username": "Moriah.Stanton",
    "email": "Rey.Padberg@karina.biz",
    "address": {
      "street": "Kattie Turnpike",
      "suite": "Suite 198",
      "city": "Lebsackbury",
      "zipcode": "31428-2261",
      "geo": {
        "lat": "-38.2386",
        "lng": "57.2232"
      }
    },
    "phone": "024-648-3804",
    "website": "ambrose.net",
    "company": {
      "name": "Hoeger LLC",
      "catchPhrase": "Centralized empowering task-force",
      "bs": "target end-to-end models"
    }
  }
] 
 </msg>
<msg timestamp="20210715 15:04:44.852" level="INFO">/Users/vubao/PycharmProjects/demo-project/venv/lib/python3.9/site-packages/urllib3/connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'jsonplaceholder.typicode.com'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20210715 15:04:44.852" level="INFO">${resp_json} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210715 15:04:44.664" endtime="20210715 15:04:44.852"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${status_code}</var>
<arg>${resp_json.status_code}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20210715 15:04:44.855" level="INFO">${status_code} = 200</msg>
<status status="PASS" starttime="20210715 15:04:44.853" endtime="20210715 15:04:44.855"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${status_code}</arg>
<arg>200</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210715 15:04:44.855" endtime="20210715 15:04:44.856"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${contentType}</var>
<arg>${resp_json.headers}</arg>
<arg>Content-Type</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20210715 15:04:44.859" level="INFO">${contentType} = application/json; charset=utf-8</msg>
<status status="PASS" starttime="20210715 15:04:44.857" endtime="20210715 15:04:44.859"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${contentType}</arg>
<arg>application/json; charset=utf-8</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210715 15:04:44.859" endtime="20210715 15:04:44.860"/>
</kw>
<status status="PASS" starttime="20210715 15:04:44.664" endtime="20210715 15:04:44.860"/>
</test>
<test id="s1-t2" name="TC_DEMO_2">
<kw name="Create Dictionary" library="BuiltIn">
<var>${data}</var>
<arg>tested=tested</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210715 15:04:44.862" level="INFO">${data} = {'tested': 'tested'}</msg>
<status status="PASS" starttime="20210715 15:04:44.862" endtime="20210715 15:04:44.862"/>
</kw>
<kw name="Post On Session" library="RequestsLibrary">
<var>${resp_json}</var>
<arg>jsonplaceholder</arg>
<arg>/posts</arg>
<arg>json=${data}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20210715 15:04:45.470" level="INFO">POST Request : url=https://jsonplaceholder.typicode.com/posts 
 path_url=/posts 
 headers={'User-Agent': 'python-requests/2.26.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '20', 'Content-Type': 'application/json'} 
 body=b'{"tested": "tested"}' 
 </msg>
<msg timestamp="20210715 15:04:45.470" level="INFO">POST Response : url=https://jsonplaceholder.typicode.com/posts 
 status=201, reason=Created 
 headers={'Date': 'Thu, 15 Jul 2021 08:04:45 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '37', 'Connection': 'keep-alive', 'X-Powered-By': 'Express', 'X-Ratelimit-Limit': '1000', 'X-Ratelimit-Remaining': '998', 'X-Ratelimit-Reset': '1626336307', 'Vary': 'Origin, X-HTTP-Method-Override, Accept-Encoding', 'Access-Control-Allow-Credentials': 'true', 'Cache-Control': 'no-cache', 'Pragma': 'no-cache', 'Expires': '-1', 'Access-Control-Expose-Headers': 'Location', 'Location': 'http://jsonplaceholder.typicode.com/posts/101', 'X-Content-Type-Options': 'nosniff', 'Etag': 'W/"25-GohWKfpLtb9us3MxD6aCS8p43/g"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'DYNAMIC', 'Expect-CT': 'max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=ihylq1MahY5y%2BuVFZNGVuYKmDIqiW%2B4JYEqasDrq3w9eHGhKSHTzN%2FX3j140A0e56QkOAUbxkDyzN9Bc0O%2FPjNUnV3mCWvA30m7giY4KgSHUSdBJP14I3zcr0KLpBr%2B6OnAGyUE0QZ%2BTpv%2BzdpfQ"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"report_to":"cf-nel","max_age":604800}', 'Server': 'cloudflare', 'CF-RAY': '66f17b5548925614-SIN', 'alt-svc': 'h3-27=":443"; ma=86400, h3-28=":443"; ma=86400, h3-29=":443"; ma=86400, h3=":443"; ma=86400'} 
 body={
  "tested": "tested",
  "id": 101
} 
 </msg>
<msg timestamp="20210715 15:04:45.470" level="INFO">/Users/vubao/PycharmProjects/demo-project/venv/lib/python3.9/site-packages/urllib3/connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'jsonplaceholder.typicode.com'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20210715 15:04:45.471" level="INFO">${resp_json} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20210715 15:04:44.863" endtime="20210715 15:04:45.471"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${resp_json.content}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210715 15:04:45.471" endtime="20210715 15:04:45.473"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>201</arg>
<arg>${resp_json}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20210715 15:04:45.474" endtime="20210715 15:04:45.474"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${resp_json.json()}</arg>
<arg>tested</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20210715 15:04:45.475" endtime="20210715 15:04:45.476"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${status_code}</var>
<arg>${resp_json.status_code}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20210715 15:04:45.479" level="INFO">${status_code} = 201</msg>
<status status="PASS" starttime="20210715 15:04:45.477" endtime="20210715 15:04:45.479"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${status_code}</arg>
<arg>201</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210715 15:04:45.479" endtime="20210715 15:04:45.480"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${contentType}</var>
<arg>${resp_json.headers}</arg>
<arg>Content-Type</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20210715 15:04:45.481" level="INFO">${contentType} = application/json; charset=utf-8</msg>
<status status="PASS" starttime="20210715 15:04:45.480" endtime="20210715 15:04:45.482"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${contentType}</arg>
<arg>application/json; charset=utf-8</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210715 15:04:45.482" endtime="20210715 15:04:45.483"/>
</kw>
<status status="PASS" starttime="20210715 15:04:44.861" endtime="20210715 15:04:45.483"/>
</test>
<status status="PASS" starttime="20210715 15:04:44.578" endtime="20210715 15:04:45.484"/>
</suite>
<statistics>
<total>
<stat pass="2" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="2" fail="0" skip="0" id="s1" name="DemoTestCase">DemoTestCase</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
